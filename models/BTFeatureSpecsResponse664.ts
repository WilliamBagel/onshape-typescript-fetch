/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.176.31157-f17972084104
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTFeatureSpec129 } from './BTFeatureSpec129';
import {
    BTFeatureSpec129FromJSON,
    BTFeatureSpec129FromJSONTyped,
    BTFeatureSpec129ToJSON,
} from './BTFeatureSpec129';

/**
 * 
 * @export
 * @interface BTFeatureSpecsResponse664
 */
export interface BTFeatureSpecsResponse664 {
    /**
     * 
     * @type {string}
     * @memberof BTFeatureSpecsResponse664
     */
    btType?: string;
    /**
     * 
     * @type {Array<BTFeatureSpec129>}
     * @memberof BTFeatureSpecsResponse664
     */
    featureSpecs?: Array<BTFeatureSpec129>;
    /**
     * 
     * @type {number}
     * @memberof BTFeatureSpecsResponse664
     */
    libraryVersion?: number;
    /**
     * 
     * @type {boolean}
     * @memberof BTFeatureSpecsResponse664
     */
    microversionSkew?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BTFeatureSpecsResponse664
     */
    rejectMicroversionSkew?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BTFeatureSpecsResponse664
     */
    serializationVersion?: string;
    /**
     * 
     * @type {string}
     * @memberof BTFeatureSpecsResponse664
     */
    sourceMicroversion?: string;
}

/**
 * Check if a given object implements the BTFeatureSpecsResponse664 interface.
 */
export function instanceOfBTFeatureSpecsResponse664(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BTFeatureSpecsResponse664FromJSON(json: any): BTFeatureSpecsResponse664 {
    return BTFeatureSpecsResponse664FromJSONTyped(json, false);
}

export function BTFeatureSpecsResponse664FromJSONTyped(json: any, ignoreDiscriminator: boolean): BTFeatureSpecsResponse664 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'btType': !exists(json, 'btType') ? undefined : json['btType'],
        'featureSpecs': !exists(json, 'featureSpecs') ? undefined : ((json['featureSpecs'] as Array<any>).map(BTFeatureSpec129FromJSON)),
        'libraryVersion': !exists(json, 'libraryVersion') ? undefined : json['libraryVersion'],
        'microversionSkew': !exists(json, 'microversionSkew') ? undefined : json['microversionSkew'],
        'rejectMicroversionSkew': !exists(json, 'rejectMicroversionSkew') ? undefined : json['rejectMicroversionSkew'],
        'serializationVersion': !exists(json, 'serializationVersion') ? undefined : json['serializationVersion'],
        'sourceMicroversion': !exists(json, 'sourceMicroversion') ? undefined : json['sourceMicroversion'],
    };
}

export function BTFeatureSpecsResponse664ToJSON(value?: BTFeatureSpecsResponse664 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'btType': value.btType,
        'featureSpecs': value.featureSpecs === undefined ? undefined : ((value.featureSpecs as Array<any>).map(BTFeatureSpec129ToJSON)),
        'libraryVersion': value.libraryVersion,
        'microversionSkew': value.microversionSkew,
        'rejectMicroversionSkew': value.rejectMicroversionSkew,
        'serializationVersion': value.serializationVersion,
        'sourceMicroversion': value.sourceMicroversion,
    };
}

