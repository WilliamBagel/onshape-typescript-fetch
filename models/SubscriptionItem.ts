/* tslint:disable */
/* eslint-disable */
/**
 * Onshape REST API
 * ## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn\'t used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.
 *
 * The version of the OpenAPI document: 1.181.37085-cf05a13421a3
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Plan } from './Plan';
import {
    PlanFromJSON,
    PlanFromJSONTyped,
    PlanToJSON,
} from './Plan';

/**
 * 
 * @export
 * @interface SubscriptionItem
 */
export interface SubscriptionItem {
    /**
     * 
     * @type {number}
     * @memberof SubscriptionItem
     */
    created?: number;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionItem
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof SubscriptionItem
     */
    object?: string;
    /**
     * 
     * @type {Plan}
     * @memberof SubscriptionItem
     */
    plan?: Plan;
    /**
     * 
     * @type {number}
     * @memberof SubscriptionItem
     */
    quantity?: number;
}

/**
 * Check if a given object implements the SubscriptionItem interface.
 */
export function instanceOfSubscriptionItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SubscriptionItemFromJSON(json: any): SubscriptionItem {
    return SubscriptionItemFromJSONTyped(json, false);
}

export function SubscriptionItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'created': !exists(json, 'created') ? undefined : json['created'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'object': !exists(json, 'object') ? undefined : json['object'],
        'plan': !exists(json, 'plan') ? undefined : PlanFromJSON(json['plan']),
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
    };
}

export function SubscriptionItemToJSON(value?: SubscriptionItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created': value.created,
        'id': value.id,
        'object': value.object,
        'plan': PlanToJSON(value.plan),
        'quantity': value.quantity,
    };
}

